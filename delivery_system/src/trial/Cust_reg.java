/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trial;
import javax.swing.*;
import java.sql.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author D. Dilsha Singh
 */
public class Cust_reg extends javax.swing.JFrame {
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    private String userID;
    /**
     * Creates new form register
     */
    public Cust_reg(String userID) {
        this.userID=userID;
        initComponents();
        try{
Class.forName("oracle.jdbc.OracleDriver");
JOptionPane.showMessageDialog(this,"Driver Loaded!");
try {
//con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",
//        "system","kushal");
con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",
        "system","kushal");
JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
}
catch (SQLException ex) {
Logger.getLogger(login.class.getName()).log(Level.SEVERE,null, ex);
JOptionPane.showMessageDialog(this,ex.getMessage());
}
}
        catch(ClassNotFoundException ex){
Logger.getLogger(login.class.getName()).log(Level.SEVERE,null, ex);
JOptionPane.showMessageDialog(this,ex.getMessage());

} 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cust_reg = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        phone = new javax.swing.JLabel();
        dob = new javax.swing.JLabel();
        pincode = new javax.swing.JLabel();
        cname = new javax.swing.JTextField();
        cphno = new javax.swing.JTextField();
        cdob = new javax.swing.JTextField();
        cpin = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cloc = new javax.swing.JTextField();
        cregister = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cust_reg.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        cust_reg.setForeground(new java.awt.Color(0, 51, 255));
        cust_reg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cust_reg.setText("CUSTOMER REGISTRATION");
        cust_reg.setAlignmentX(10.0F);

        name.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        name.setText("NAME");

        phone.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        phone.setText("PHONE NO");

        dob.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        dob.setText("DATE OF BIRTH");

        pincode.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        pincode.setText("PINCODE");

        cname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnameActionPerformed(evt);
            }
        });

        cphno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cphnoActionPerformed(evt);
            }
        });

        cdob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdobActionPerformed(evt);
            }
        });

        cpin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpinActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("LOCATION");

        cloc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clocActionPerformed(evt);
            }
        });

        cregister.setBackground(new java.awt.Color(51, 0, 255));
        cregister.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        cregister.setForeground(new java.awt.Color(255, 255, 255));
        cregister.setText("REGISTER");
        cregister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cregisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(phone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(pincode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cphno, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cdob, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cpin, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cloc, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(cust_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(cregister)))
                .addContainerGap(265, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(cust_reg)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone)
                    .addComponent(cphno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dob)
                    .addComponent(cdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pincode)
                    .addComponent(cpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cregister)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cregisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cregisterActionPerformed
        // TODO add your handling code here:
        String name = cname.getText();
        String phone = cphno.getText();
        String dob = cdob.getText();
        String pincode = cpin.getText();
        String location = cloc.getText();

        // Check if any field is empty
        if (name.isEmpty() || phone.isEmpty() || dob.isEmpty() || pincode.isEmpty() || location.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields.");
            return;
        }

        // Insert data into the database
        try {
            con.setAutoCommit(false);
            
            // Insert into location table
            CallableStatement cs = con.prepareCall("{call CheckLocationPincode(?, ?)}");
        cs.setString(1, pincode);
        cs.registerOutParameter(2, Types.INTEGER);
        cs.execute();
        int pincodeExists = cs.getInt(2);

        if (pincodeExists == 0) {
            // Pincode does not exist, insert into location table
            String insertLocationSQL = "INSERT INTO location (pincode, location) VALUES (?, ?)";
            ps = con.prepareStatement(insertLocationSQL);
            ps.setString(1, pincode);
            ps.setString(2, location);
            ps.executeUpdate();
        }
            
            // Insert into contact table
            String insertContactSQL = "INSERT INTO contact (name, phone_no) VALUES (?, ?)";
            ps = con.prepareStatement(insertContactSQL);
            ps.setString(1, name);
            ps.setString(2, phone);
            ps.executeUpdate();
            
            
            // Insert into customers table
            String insertCustomerSQL = "INSERT INTO customers (cust_id, cust_name, cust_phone, cust_dob, pincode) VALUES (?, ?, ?, ?, ?)";
            ps = con.prepareStatement(insertCustomerSQL);
            ps.setString(1, userID); // Use userID from register frame for cust_id
            ps.setString(2, name);
            ps.setString(3, phone);
            ps.setString(4, dob);
            ps.setString(5, pincode);
            ps.executeUpdate();

            con.commit();
            JOptionPane.showMessageDialog(this, "Customer registered successfully!");
            
            this.dispose();

        // Show register.java frame
            login loginFrame = new login();  // Assuming login.java has a default constructor
            loginFrame.setVisible(true);

        } catch (SQLException ex) {
            Logger.getLogger(Cust_reg.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
            try {
                con.rollback();
            } catch (SQLException e) {
                Logger.getLogger(Cust_reg.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } finally {
            try {
                con.setAutoCommit(true);
            } catch (SQLException e) {
                Logger.getLogger(Cust_reg.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_cregisterActionPerformed

    private void cphnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cphnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cphnoActionPerformed

    private void cpinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpinActionPerformed

    private void cnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnameActionPerformed

    private void cdobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cdobActionPerformed

    private void clocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clocActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cust_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cust_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cust_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cust_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cust_reg("defaultUserID").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cdob;
    private javax.swing.JTextField cloc;
    private javax.swing.JTextField cname;
    private javax.swing.JTextField cphno;
    private javax.swing.JTextField cpin;
    private javax.swing.JButton cregister;
    private javax.swing.JLabel cust_reg;
    private javax.swing.JLabel dob;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel name;
    private javax.swing.JLabel phone;
    private javax.swing.JLabel pincode;
    // End of variables declaration//GEN-END:variables
}
